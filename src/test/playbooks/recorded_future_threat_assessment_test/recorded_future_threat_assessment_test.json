{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "Playbook used to test the threat assessment methods of the Recorded Future app.",
            "hash": "a9f97b2e95cbc5b7f2f9657c9fd4ac9be30d28e0",
            "joint": {
                "cells": [
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#FFFFFF",
                                "stroke": "#818D99"
                            },
                            ".color-band": {
                                "fill": "#171D21"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'threat_assessment_1' block\n    threat_assessment_1(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2287b97a-f6eb-43d8-964d-36618bc15d28",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 16,
                        "line_start": 8,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 1
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5d988206-160e-4098-8355-0cce89a04427",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2287b97a-f6eb-43d8-964d-36618bc15d28",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e9ecd4ea-4132-4101-a369-5601af9e6da9",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0a2270a6-1f1f-4d96-b6fa-7ef0446c1cf2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e9ecd4ea-4132-4101-a369-5601af9e6da9",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b5a25ca3-bf26-4873-932c-d4f726cb857e",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 7
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#FFFFFF",
                                "stroke": "#818D99"
                            },
                            ".color-band": {
                                "fill": "#171D21"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all detals of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "threat assessment",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b5a25ca3-bf26-4873-932c-d4f726cb857e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 55,
                        "line_start": 42,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 3,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 640,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 9
                    },
                    {
                        "action": "threat assessment",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "domain": "artifact:*.cef.destinationDnsDomain",
                            "hash": "artifact:*.cef.fileHashMd5",
                            "ip": "artifact:*.cef.destinationAddress",
                            "threat_context": "artifact:*.cef.cs1",
                            "threshold": "artifact:*.cef.cs2",
                            "threshold_type": "artifact:*.cef.cs3",
                            "url": "artifact:*.cef.requestURL"
                        },
                        "angle": 0,
                        "app": "Recorded Future",
                        "appid": "6efe0e1b-76ac-4ffd-8fa0-ac58fd6efd77",
                        "approver": "",
                        "assets": [
                            {
                                "action": "threat assessment",
                                "actions": [
                                    "list contexts",
                                    "threat assessment",
                                    "ip reputation",
                                    "ip intelligence",
                                    "domain reputation",
                                    "domain intelligence",
                                    "file reputation",
                                    "file intelligence",
                                    "vulnerability reputation",
                                    "vulnerability intelligence",
                                    "url reputation",
                                    "url intelligence",
                                    "alert rule lookup",
                                    "alert data lookup",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Recorded Future",
                                "app_version": "2.0.0",
                                "appid": "6efe0e1b-76ac-4ffd-8fa0-ac58fd6efd77",
                                "asset_name": "recorded-future",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "domain": "artifact:*.cef.destinationDnsDomain",
                                    "hash": "artifact:*.cef.fileHashMd5",
                                    "ip": "artifact:*.cef.destinationAddress",
                                    "threat_context": "artifact:*.cef.cs1",
                                    "threshold": "artifact:*.cef.cs2",
                                    "threshold_type": "artifact:*.cef.cs3",
                                    "url": "artifact:*.cef.requestURL"
                                },
                                "has_app": true,
                                "id": 6,
                                "loaded": false,
                                "missing": false,
                                "name": "recorded-future",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "IpAddress"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.risklevel",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rulecount",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.evidence.ruleid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.evidence.timestamp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.evidence.mitigation",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.evidence.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.evidence.rule",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.evidence.level",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.maxrules",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.riskscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.threat_context",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.parameter.domain",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.parameter.url",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "hash",
                                            "sha256",
                                            "sha1",
                                            "md5"
                                        ],
                                        "data_path": "action_result.parameter.hash",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.threshold",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.threshold_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.riskscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.summary.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "IpAddress"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.risklevel",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "domain": {
                                        "allow_list": true,
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Domain to query",
                                        "key": "domain",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    },
                                    "hash": {
                                        "allow_list": true,
                                        "contains": [
                                            "hash",
                                            "sha256",
                                            "sha1",
                                            "md5"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Hash to query",
                                        "key": "hash",
                                        "order": 4,
                                        "primary": false,
                                        "required": false
                                    },
                                    "ip": {
                                        "allow_list": true,
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to query",
                                        "key": "ip",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    },
                                    "threat_context": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Context to use",
                                        "key": "threat_context",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "threshold": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Threshold to use if different from the default",
                                        "key": "threshold",
                                        "order": 5,
                                        "primary": false,
                                        "required": false
                                    },
                                    "threshold_type": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Threshold type to use unless different from the default",
                                        "key": "threshold_type",
                                        "order": 6,
                                        "primary": false,
                                        "required": false
                                    },
                                    "url": {
                                        "allow_list": true,
                                        "contains": [
                                            "url"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "URL to query",
                                        "key": "url",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    }
                                },
                                "product_name": "Recorded Future App for Phantom",
                                "product_vendor": "Recorded Future, Inc",
                                "targets": "6",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "threat assessment"
                            },
                            ".background": {
                                "fill": "#FFFFFF",
                                "stroke": "#818D99"
                            },
                            ".color-band": {
                                "fill": "#171D21"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def threat_assessment_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('threat_assessment_1() called')\n\n    # collect data for 'threat_assessment_1' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.destinationDnsDomain', 'artifact:*.cef.fileHashMd5', 'artifact:*.cef.requestURL', 'artifact:*.cef.destinationAddress', 'artifact:*.cef.cs3', 'artifact:*.cef.cs1', 'artifact:*.cef.cs2', 'artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'threat_assessment_1' call\n    for container_item in container_data:\n        parameters.append({\n            'domain': container_item[0],\n            'hash': container_item[1],\n            'url': container_item[2],\n            'ip': container_item[3],\n            'threshold_type': container_item[4],\n            'threat_context': container_item[5],\n            'threshold': container_item[6],\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': container_item[7]},\n        })\n\n    phantom.act(\"threat assessment\", parameters=parameters, assets=['recorded-future'], name=\"threat_assessment_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e9ecd4ea-4132-4101-a369-5601af9e6da9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 42,
                        "line_start": 16,
                        "message": "Configuring now",
                        "name": "threat assessment",
                        "notes": "",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 320,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "threat_assessment_1",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": "",
                        "z": 10
                    }
                ]
            },
            "notes": ""
        },
        "schema": 3,
        "version": "4.8.23319"
    },
    "create_time": "2020-02-12T07:13:16.820985+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": [
        "recorded_future_threat_assessment_test"
    ]
}